"use strict";(self.webpackChunkwanlok_component_react=self.webpackChunkwanlok_component_react||[]).push([[8476],{48476:(e,t,r)=>{r.r(t),r.d(t,{default:()=>te});var i=r(35143),s=r(39356),o=r(18690),n=r(76460),a=r(30726),d=r(68134),l=r(78393),h=r(46053),u=(r(81806),r(85842)),c=r(20664),p=r(9392),g=r(45308),_=r(14487),v=r(11352),y=r(44815),f=r(86729),m=r(3569),b=r(99784),x=r(18117),I=r(32535),E=r(4342),w=r(8203),N=r(97015),C=r(86300),O=r(12016);class D extends O.B{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:e=>[e.geometryBuffer]},e,{hasInitialize:!0})}}var F=r(83491),A=r(21010),M=r(20170),S=r(74294),G=r(54099),R=r(87663);class P extends G.A{constructor(e,t){super(),this._updateAndCompare=e,this._notifyUpdated=t,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()}get length(){return this._graphics.size}get(e){return this._graphics.get(e)}getNode(e){return this._nodes.get(e)}hasNode(e){return this._nodes.has(e)}nodes(){return this._nodes.values()}addNode(e,t){this._nodes.set(e,t);const r=t.graphics;if(0===r.length)return;const i=new Set;for(let o=0;o<r.length;o++){const t=r[o],s=t.objectId,n=this._graphics.get(s);if(n){i.add(s),t!==n&&(r[o]=n);const a=this._duplicates.get(s);a?a.push(e):this._duplicates.set(s,[n.nodeIndex,e])}else t.nodeIndex=e,this._graphics.set(s,t)}i.size&&this._updateForeignGraphics(t);const s=i.size>0?r.filter((e=>!i.has(e.objectId))):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(e){const t=this._nodes.get(e);if(!t)return void console.error("Removing unknown node");this._nodes.delete(e);const r=new Set,i=[];for(const s of t.graphics){const t=s.objectId,o=this._graphics.get(t);if(!o)continue;const n=this._duplicates.get(t);if(n){const i=n.indexOf(e);if(-1===i){console.error("error: removing graphic from node that should not reference it.");continue}if(n.splice(i,1),o.nodeIndex===e){let e=this.getNode(n[0]);for(let t=1;t<n.length;t++){const r=this.getNode(n[t]);(null==e||null!=r&&r.node.level>e.node.level)&&(e=r)}null!=e&&r.add(e)}1===n.length&&this._duplicates.delete(t)}else this._graphics.delete(t),i.push(s)}i.length>0&&this.emit("change",{added:[],removed:i}),r.forEach((e=>this._updateForeignGraphics(e)))}_updateForeignGraphics(e){const t=[],r=e.node.index,i=e.node.level;let s=0;for(;s<e.graphics.length;){const o=e.graphics[s].nodeIndex;if(o===r){s++;continue}let n=1;for(;s+n<e.graphics.length&&e.graphics[s+n].nodeIndex===o;)n++;const a=this.getNode(o);if(null!=a&&a.node.level>i)s+=n;else{for(let i=s;i<s+n;i++){const s=e.graphics[i];s.nodeIndex=r,this._updateAndCompare(s,e,i)&&t.push(s)}s+=n}}this._notifyUpdated(t)}toArray(){return Array.from(this._graphics.values())}find(e){let t;return(0,R.Bs)(this._graphics,(r=>!!e(r)&&(t=r,!0))),t}forEach(e){this._graphics.forEach((t=>e(t)))}forEachNode(e){this._nodes.forEach(((t,r)=>e(t,r)))}get nodeCount(){return this._nodes.size}_checkInvariants(){const e=new Map;this._nodes.forEach(((t,r)=>{r!==t.node.index&&console.error("Mismatched node index"),t.graphics.forEach((t=>{var i;e.set(t.objectId,1+(null!==(i=e.get(t.objectId))&&void 0!==i?i:0));const s=this._duplicates.get(t.objectId);s&&!s.includes(r)&&console.error("Node not listed in duplicate list"),s||t.nodeIndex===r||console.error("Unique graphic does not reference owning node index")}))})),this._graphics.size!==e.size&&console.error("Mismatch between actual and expected number of graphics");let t=0;e.forEach(((e,r)=>{t+=e>1?1:0;const i=this._graphics.get(r);if(!i)return void console.error("Missing graphic entry");const s=this._nodes.get(i.nodeIndex);if(!s)return void console.error("Graphic references unkown node");const o=this._duplicates.get(r);o?(o.length!==e&&console.error("Wrong number of entries in duplicate list"),o.forEach((e=>{const t=this._nodes.get(e);t?t.node.level>s.node.level&&console.error("Duplicated graphic does not reference highest level node"):console.error("Unknown node in duplicate list")}))):e>1&&console.error("Missing duplicates entry")})),this._duplicates.size!==t&&console.error("Mismatch between expected and actual number of duplicate entries")}}var V=r(95206),j=r(74279),L=r(39097),H=r(38229),Z=r(65768),q=r(58698),Q=r(33680),k=r(50532),U=r(22955),z=r(59231),T=r(93938),B=r(50468),W=r(44513),K=r(82558),Y=r(2257),J=r(59752);const X=(0,H.p)();class ${constructor(e,t,r,i){this.graphics=e,this.featureIds=t,this.attributeInfo=r,this.node=i}}let ee=class extends((0,k.P)((0,L.E)((0,q.R)((0,F.w)(K.A))))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new P(((e,t,r)=>function(e,t,r){const i=t.attributeInfo;if(null==(null===i||void 0===i?void 0:i.loadedAttributes)||null==i.attributeData)return!1;let s=!1;for(const{name:o}of i.loadedAttributes)if(i.attributeData[o]){const t=(0,j.E5)(i.attributeData[o],r);t!==e.attributes[o]&&(e.attributes[o]=t,s=!0)}return s}(e,t,r)),(e=>this.processor.graphicsCore.recreateGraphics(e))),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then((()=>{var t;(0,j.bv)(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const r=null===(t=this.view.resourceController)||void 0===t?void 0:t.memoryController;this._i3sOverrides=new V.n({view:this.view,layer:e,memoryController:r}),(0,a.pR)(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()})):null}initialize(){var e,t;this.addResolvingPromise(this.layer.indexInfo);const i=null===(e=this.view.resourceController)||void 0===e?void 0:e.memoryController;this._i3sOverrides=new V.n({view:this.view,layer:this.layer,memoryController:i}),(0,j.H)(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new Q.z({layerView:this}),this._updatingHandles.add((()=>this.layer.rangeInfos),(e=>this._rangeInfosChanged(e)),d.Vh),this._updatingHandles.add((()=>this.layer.renderer),((e,t)=>this._rendererChange(e,t))),this._updatingHandles.add((()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted]),(()=>this._filterChange())),this.addHandles((0,d.wB)((()=>U.b.I3S_TREE_SHOW_TILES),(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;r.e(7802).then(r.bind(r,27802)).then((t=>{let{I3STreeDebugger:r}=t;!this._treeDebugger&&U.b.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new r({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||U.b.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}),d.Vh)),this._set("processor",new A.n({owner:this,preferredUpdatePolicy:W.q.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),null!==(t=this.processor.elevationAlignment)&&void 0!==t&&t.events.on("invalidate-elevation",(e=>{let{extent:t,spatialReference:r}=e;return this._controller.updateElevationChanged(t,r)})),this.supportsHeightUnitConversion&&(this._verticalScale=(0,f.N)("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache("psl-".concat(this.uid)),this._controller=new E.A({layerView:this,scaleVisibilityEnabled:!1}),(0,j.ht)(this.layer.geometryDefinitions)&&(this._worker=new D((e=>this.view.resourceController.immediate.schedule(e)))),this.addHandles(this.layer.on("apply-edits",(e=>this._updatingHandles.addPromise(e.result)))),this.addHandles(this.layer.on("edits",(e=>{const t=this._pendingEditsQueue.then((()=>this._handleEdits(e))).then();this._pendingEditsQueue=t,this._updatingHandles.addPromise(t)}))),this.when((()=>{this._setupQueryEngine(),this._updatingHandles.add((()=>this.maximumNumberOfFeatures),(e=>this._controller.featureTarget=e),d.Vh),this._updatingHandles.add((()=>this.suspended),(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=(0,a.pR)(this._treeDebugger),this._i3sOverrides=(0,a.pR)(this._i3sOverrides),this._set("processor",(0,a.pR)(this.processor)),this._controller=(0,a.pR)(this._controller),this._queryEngine=(0,a.pR)(this._queryEngine),this._worker=(0,a.pR)(this._worker),this._memCache=(0,a.pR)(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=(0,a.pR)(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e,t;return null!==(e=null===(t=this._controller)||void 0===t?void 0:t.updatingProgress)&&void 0!==e?e:1}get requiredFields(){var e,t;return null!==(e=null===(t=this._fieldsHelper)||void 0===t?void 0:t.requiredFields)&&void 0!==e?e:[]}get maximumNumberOfFeatures(){var e,t;const r=null===(e=this.processor)||void 0===e||null===(e=e.graphicsCore)||void 0===e?void 0:e.displayFeatureLimit;return null!==(t=null===r||void 0===r?void 0:r.maximumNumberOfFeatures)&&void 0!==t?t:0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!(null===(e=this._controller)||void 0===e||!e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort(((e,t)=>e-t)):null}get lodFactor(){return"Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){var e;return!this.suspended&&!(null===(e=this._controller)||void 0===e||!e.rootNodeVisible)}get legendEnabled(){var e;return this.contentVisible&&!0===(null===(e=this.i3slayer)||void 0===e?void 0:e.legendEnabled)}async whenGraphicAttributes(e,t){return(0,j.uJ)(this.layer,e,this._getObjectIdField(),t,(()=>[...this.loadedGraphics.nodes()]))}getHit(e){var t;if(!this.loadedGraphics)return null;const r=(0,I.wP)(this.loadedGraphics.find((t=>t.uid===e)),this.layer),i=this._getObjectIdField();return null!==r&&void 0!==r&&null!==(t=r.attributes)&&void 0!==t&&t[i]?(r.layer=this.layer,r.sourceLayer=this.layer,{type:"graphic",graphic:r,layer:r.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){var e,t,r;return!!(null!==(e=this._controller)&&void 0!==e&&e.updating||null!==(t=this.processor)&&void 0!==t&&t.updating||null!==(r=this._fieldsHelper)&&void 0!==r&&r.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return(0,S.bh)(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};null==this._worker&&(this._worker=new D((e=>this.view.resourceController.immediate.schedule(e))));const i=await this._worker.invoke(r,t);if(null==i)throw new Error("Failed to decompress Draco point data");return{positionData:i.positions,featureIds:i.featureIds}}async addNode(e,t,r){if(!re(t)&&!function(e){return"pointData"in e}(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void n.A.getLogger(this).error("I3S node "+e.id+" already added");const i=null!=this.layer.fullExtent?function(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,null!=e.zmin&&null!=e.zmax&&(e.zmin-=t,e.zmax+=t),null!=e.mmin&&null!=e.mmax&&(e.mmin-=t,e.mmax+=t),e}(this.layer.fullExtent.clone(),.5):null,{featureIds:s,pointPositions:o}=re(t)?await this._extractBinaryPointPositions(e,t,r):this._extractLegacyPointPositions(t),a=new Array;this._validatePositions(e,s,o,i,a);const d=this._controller.crsVertex,l=this.view.spatialReference;(0,g.projectBuffer)(o,d,0,o,l,0,s.length);const h=re(t)?e.level:0,u=this._createGraphics(s,o,e.index,h),c=new $(u,s,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(c.featureIds,t.attributeDataInfo,r),e.numFeatures=c.graphics.length,this._updateNodeMemory(e),ie(c),a.length>0&&(this._computeObb(e,a,d),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(c);if(null!=this._verticalScale)for(const n of c.graphics)this._verticalScale(n.geometry);const p=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(null!=p){const e=(0,C.ns)(this.view.map,this.layer.uid);for(let t=0;t<c.featureIds.length;t++){var _;const r=c.featureIds[t];p.setUidToObjectAndLayerId(r,c.graphics[t].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!e&&(0,Y.d0)(this.layer,null===(_=this.view.popup)||void 0===_?void 0:_.defaultPopupTemplateEnabled),c.node.resources.attributes,t)}}this.loadedGraphics.addNode(e.index,c),this._controller.updateLoadStatus(e.index,!0),this._filterNode(c),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;(0,g.projectBuffer)(t,r,0,t,s,0,t.length/3),e.serviceObbInIndexSR=(0,z.OX)(new B.K(t,3)),i.isGeographic&&((0,_.F)(e.serviceObbInIndexSR.center,s,oe,i),e.serviceObbInIndexSR.center=oe)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,r){const i=await this._decompressBinaryPointData(t,r),s=i.positionData,o=s.length/3,n=(0,y.jh)(3*o),a=null!=e.serviceObbInIndexSR?e.serviceObbInIndexSR.center:p.uY,d=Math.abs(a[2])*2**-20;for(let l=0;l<o;l++){const e=3*l;n[e]=s[e]+a[0],n[e+1]=s[e+1]+a[1],n[e+2]=s[e+2]+a[2],Math.abs(n[e+2])<d&&(n[e+2]=0)}return{featureIds:i.featureIds?(0,y.xm)(i.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){const t=e.pointData.length,r=(0,y.jh)(3*t),i=new Array;for(let d=0;d<t;d++){var s,o,n,a;const t=e.pointData[d],l=t.featureDataPosition,h=l.length,u=null!==(s=null===(o=t.geometries)||void 0===o?void 0:o[0])&&void 0!==s?s:se[h],c=t.featureIds[0];if("Embedded"!==u.type||"points"!==u.params.type||h<2||h>3)continue;const p=null!==(n=null===(a=u.params.vertexAttributes)||void 0===a?void 0:a.position)&&void 0!==n?n:[0,0,0],g=3*i.length;r[g]=l[0]+p[0],r[g+1]=l[1]+p[1],r[g+2]=3===h?l[2]+p[2]:NaN,i.push(c)}return{featureIds:i,pointPositions:r}}_validatePositions(e,t,r,i,s){if(null==i&&e.serviceObbInIndexSR)return;const o=t.length;for(let a=0;a<o;a++){const t=3*a;(0,c.s)(oe,r[t],r[t+1],r[t+2]);const o=!Number.isNaN(r[2]);null==i||(o?(0,v.F8)(i,oe):(0,v.CW)(i,oe))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&n.A.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&n.A.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||s.push(oe[0],oe[1],oe[2])}}_createGraphics(e,t,r,i){const o=e.length,n=this._getObjectIdField(),a=this.processor.graphicsCore,d=new Array,l=this.view.spatialReference;for(let h=0;h<o;h++){const o=e[h],u={};null!=o&&(u[n]=o);const c=null!==o&&void 0!==o?o:s.A.generateUID(),p=3*h,g=isNaN(t[p+2])?void 0:t[p+2],_=(0,x.T)(t[p],t[p+1],g,l),v=this.loadedGraphics.get(c);if(null!=v)(null==v.level||v.level<i)&&(ne.property="geometry",ne.graphic=v,ne.oldValue=v.geometry,ne.newValue=_,v.geometry=_,v.level=i,a.graphicUpdateHandler(ne)),d.push(v);else{const e=s.A.generateUID();d.push({objectId:c,uid:e,geometry:_,attributes:u,visible:!0,nodeIndex:r,level:i})}}return d}_updateNodeMemory(e){e.memory=4096+(null!=e.numFeatures?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>(0,b.Ek)(t)+e),(0,l.Ek)(e.featureIds)+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return"".concat(e.index)}_removeAllNodeData(){this.loadedGraphics.forEachNode(((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)})),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return null==t?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){var t;return null===(t=this._memCache)||void 0===t?void 0:t.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){this.loadedGraphics.hasNode(e.index)?n.A.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,r,i),this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),t.attributeInfo=r,this._attributeValuesChanged(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(null!=(null===t||void 0===t?void 0:t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(null!=(null===t||void 0===t?void 0:t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this.loadedGraphics.getNode(e);null!=(null===r||void 0===r?void 0:r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const i=this.loadedGraphics.getNode(e);null!=i&&(await this._i3sOverrides.applyAttributeOverrides(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i))}_attributeValuesChanged(e){if(ie(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||m.r}_getGlobalIdField(){var e;return null===(e=this.layer.associatedLayer)||void 0===e?void 0:e.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&n.A.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,r=this._excludeObjectIdsSorted,i=this._getObjectIdField();for(const s of e.graphics){const e=s.visible,n=!t||this._evaluateClause(t,s),a=null==r||(0,o.FQ)(r,s.attributes[i])<0;s.visible=n&&a,e!==s.visible&&(ne.graphic=s,ne.property="visible",ne.oldValue=e,ne.newValue=s.visible,this.processor.graphicsCore.graphicUpdateHandler(ne))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return null!=this.filter?this.filter.createQuery(e):new N.A(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),null===t||void 0===t?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),null===t||void 0===t?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),null===t||void 0===t?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),null===t||void 0===t?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(null==e?this.createQuery():N.A.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new M.d({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:J.W6.FEATURE_QUERY_ENGINE})}get usedMemory(){var e,t;return null!==(e=null===(t=this.processor)||void 0===t||null===(t=t.graphicsCore)||void 0===t?void 0:t.usedMemory)&&void 0!==e?e:0}get unloadedMemory(){var e,t,r,i;return.8*((null!==(e=null===(t=this._controller)||void 0===t?void 0:t.unloadedMemoryEstimate)&&void 0!==e?e:0)+(null!==(r=null===(i=this.processor)||void 0===i||null===(i=i.graphicsCore)||void 0===i?void 0:i.unprocessedMemoryEstimate)&&void 0!==r?r:0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,r=await(0,S.Eu)(t,e);(0,S.ry)(t,r)}get _attributeEditingContext(){var e;const t=this._getObjectIdField(),r=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:t,globalIdField:r,forEachNode:e=>this.loadedGraphics.forEachNode((t=>e(t.node,t.featureIds))),attributeStorageInfo:null!==(e=this.i3slayer.attributeStorageInfo)&&void 0!==e?e:[],i3sOverrides:this._i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(e,r,i)=>{this._setAttributeData(e,r);const s=this.loadedGraphics.getNode(e);if(null!=i){const e=this.loadedGraphics.get(i.attributes[t]);null!=e&&this.processor.graphicsCore.recreateGraphics([e])}else null!=s&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new Z.P(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){return{controller:this._controller,numNodes:this.loadedGraphics.nodeCount,loadedGraphics:this.loadedGraphics}}};(0,i._)([(0,h.MZ)()],ee.prototype,"processor",void 0),(0,i._)([(0,h.MZ)({type:w.A})],ee.prototype,"filter",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"loadedGraphics",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"i3slayer",null),(0,i._)([(0,h.MZ)()],ee.prototype,"_controller",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"updating",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"suspended",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"holeFilling",void 0),(0,i._)([(0,h.MZ)(T.S)],ee.prototype,"updatingProgress",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"updatingProgressValue",null),(0,i._)([(0,h.MZ)(X.requiredFields)],ee.prototype,"requiredFields",null),(0,i._)([(0,h.MZ)(X.availableFields)],ee.prototype,"availableFields",void 0),(0,i._)([(0,h.MZ)()],ee.prototype,"_fieldsHelper",void 0),(0,i._)([(0,h.MZ)({type:Number})],ee.prototype,"maximumNumberOfFeatures",null),(0,i._)([(0,h.MZ)({readOnly:!0})],ee.prototype,"maximumNumberOfFeaturesExceeded",null),(0,i._)([(0,h.MZ)()],ee.prototype,"_excludeObjectIdsSorted",null),(0,i._)([(0,h.MZ)({readOnly:!0})],ee.prototype,"lodFactor",null),(0,i._)([(0,h.MZ)({readOnly:!0})],ee.prototype,"hasM",null),(0,i._)([(0,h.MZ)({readOnly:!0})],ee.prototype,"hasZ",null),(0,i._)([(0,h.MZ)()],ee.prototype,"contentVisible",null),(0,i._)([(0,h.MZ)({readOnly:!0})],ee.prototype,"legendEnabled",null),ee=(0,i._)([(0,u.$)("esri.views.3d.layers.SceneLayerGraphicsView3D")],ee);const te=ee;function re(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function ie(e){const t=e.attributeInfo,r=e.node.index;if(null!=(null===t||void 0===t?void 0:t.loadedAttributes)&&null!=t.attributeData)for(let i=0;i<e.graphics.length;i++){const s=e.graphics[i];if(s.nodeIndex===r){s.attributes||(s.attributes={});for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=(0,j.E5)(t.attributeData[e],i))}}}const se={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},oe=(0,p.vt)(),ne={graphic:null,property:null,oldValue:null,newValue:null}}}]);
//# sourceMappingURL=8476.10ade841.chunk.js.map