"use strict";(self.webpackChunkwanlok_component_react=self.webpackChunkwanlok_component_react||[]).push([[7818],{96111:(e,t,i)=>{i.d(t,{L:()=>b,b:()=>m});var n,r,s=i(57528),a=i(34761),l=i(13191),o=i(19555),h=i(72745),c=i(31484),d=i(95756),u=i(21390),p=i(64839),_=i(43425),g=i(32307),f=i(66470);function m(e){const t=new g.N5;t.include(c.K,e);const{vertex:i,fragment:l}=t;return i.uniforms.add(new _.X("modelView",((e,t)=>(0,a.Tl)(P,t.camera.viewMatrix,e.origin))),new _.X("proj",((e,t)=>t.camera.projectionMatrix)),new u.m("glowWidth",((e,t)=>e.glowWidth*t.camera.pixelRatio)),new d.G("pixelToNDC",((e,t)=>(0,o.hZ)(v,2/t.camera.fullViewport[2],2/t.camera.fullViewport[3])))),t.attributes.add(f.r.START,"vec3"),t.attributes.add(f.r.END,"vec3"),t.attributes.add(f.r.UP,"vec3"),t.attributes.add(f.r.EXTRUDE,"vec2"),t.varyings.add("uv","vec2"),t.varyings.add("vViewStart","vec3"),t.varyings.add("vViewEnd","vec3"),t.varyings.add("vViewPlane","vec4"),i.code.add((0,p.H)(n||(n=(0,s.A)(["void main() {\nvec3 pos = mix(start, end, extrude.x);\nvec4 viewPos = modelView * vec4(pos, 1);\nvec4 projPos = proj * viewPos;\nvec2 ndcPos = projPos.xy / projPos.w;\nvec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;\nvec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);\nvec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);\nvec2 lxy = abs(sign(projExtrudeDir) - ndcPos);\nndcPos += length(lxy) * projExtrudeDir;\nvec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));\nvec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;\nvViewStart = (modelView * vec4(start, 1)).xyz;\nvViewEnd = (modelView * vec4(end, 1)).xyz;\nvViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));\nfloat xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;\nndcPos.x += xPaddingPixels * pixelToNDC.x;\nuv = ndcPos * 0.5 + 0.5;\ngl_Position = vec4(ndcPos, 0, 1);\n}"])))),l.uniforms.add(new u.m("perScreenPixelRatio",((e,t)=>t.camera.perScreenPixelRatio))),l.code.add((0,p.H)(r||(r=(0,s.A)(["float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {\nvec3 origin = mix(start, end, 0.5);\nvec3 basis = end - origin;\nvec3 posAtOrigin = pos - origin;\nfloat x = dot(normalize(basis), posAtOrigin);\nfloat y = dot(plane.xyz, posAtOrigin);\nfloat dx = max(abs(x) - length(basis), 0.0);\nfloat dy = y;\nfloat dist = length(vec2(dx, dy));\nfloat width = fwidth(y);\nfloat maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;\nfloat pixelDist = dist / min(width, maxPixelDistance);\nreturn abs(pixelDist);\n}\nvoid main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nvec3 dEndStart = vViewEnd - vViewStart;\nif (dot(dEndStart, dEndStart) < 1e-5) {\ndiscard;\n}\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nfloat distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);\nvec4 color = laserlineProfile(distance);\nfloat alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));\nfragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);\n}"])))),t}const v=(0,h.vt)(),P=(0,l.vt)(),b=Object.freeze(Object.defineProperty({__proto__:null,build:m},Symbol.toStringTag,{value:"Module"}))},71467:(e,t,i)=>{i.d(t,{L:()=>X,b:()=>q,d:()=>I});var n,r,s,a,l,o,h,c,d,u,p,_,g,f,m=i(57528),v=i(15941),P=i(19555),b=i(72745),x=i(20664),w=i(9392),E=i(43047),D=i(55855),V=i(44230),y=i(13927),L=i(93582),S=i(31484),C=i(73398),A=i(95756),M=i(5517),R=i(58350),T=i(21390),z=i(64839),O=i(32307);const I=(0,v.kU)(6);function q(e){const t=new O.N5;t.include(C.c),t.include(S.K,e);const i=t.fragment;if(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)if(i.uniforms.add(new T.m("maxPixelDistance",((t,i)=>e.heightManifoldEnabled?2*i.camera.computeScreenPixelSizeAt(t.heightManifoldTarget):2*i.camera.computeScreenPixelSizeAt(t.lineVerticalPlaneSegment.origin)))),i.code.add((0,z.H)(n||(n=(0,m.A)(["float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}"])))),e.spherical){const e=(e,t,i)=>(0,x.e)(e,t.heightManifoldTarget,i.camera.viewMatrix),t=(e,t)=>(0,x.e)(e,[0,0,0],t.camera.viewMatrix);i.uniforms.add(new R.E("heightManifoldOrigin",((i,n)=>(e(B,i,n),t(j,n),(0,x.f)(j,j,B),(0,x.n)(U,j),U[3]=(0,x.l)(j),U))),new M.t("globalOrigin",((e,i)=>t(B,i))),new T.m("cosSphericalAngleThreshold",((e,t)=>1-Math.max(2,(0,x.q)(t.camera.eye,e.heightManifoldTarget)*t.camera.perRenderPixelRatio)/(0,x.l)(e.heightManifoldTarget)))),i.code.add((0,z.H)(r||(r=(0,m.A)(["float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}"]))))}else i.code.add((0,z.H)(s||(s=(0,m.A)(["float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}"]))));if(e.pointDistanceEnabled&&(i.uniforms.add(new T.m("maxPixelDistance",((e,t)=>2*t.camera.computeScreenPixelSizeAt(e.pointDistanceTarget)))),i.code.add((0,z.H)(a||(a=(0,m.A)(["float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}"]))))),e.intersectsLineEnabled&&(i.uniforms.add(new T.m("perScreenPixelRatio",((e,t)=>t.camera.perScreenPixelRatio))),i.code.add((0,z.H)(l||(l=(0,m.A)(["float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}"]))))),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&i.code.add((0,z.H)(o||(o=(0,m.A)(["bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}"])))),i.code.add((0,z.H)(h||(h=(0,m.A)(["void main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);"])))),e.heightManifoldEnabled){i.uniforms.add(new A.G("angleCutoff",(e=>H(e))),new R.E("heightPlane",((e,t)=>W(e.heightManifoldTarget,e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget,B),t.camera.viewMatrix))));const t=e.spherical?(0,z.H)(c||(c=(0,m.A)(["normalize(globalOrigin - pos)"]))):(0,z.H)(d||(d=(0,m.A)(["heightPlane.xyz"])));i.code.add((0,z.H)(u||(u=(0,m.A)(["\n    {\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, ",")));\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);\n    }\n    "])),t))}return e.pointDistanceEnabled&&(i.uniforms.add(new A.G("angleCutoff",(e=>H(e))),new R.E("pointDistanceSphere",((e,t)=>function(e,t){return(0,x.e)((0,L.g)(Z),e.pointDistanceOrigin,t.camera.viewMatrix),Z[3]=(0,x.q)(e.pointDistanceOrigin,e.pointDistanceTarget),Z}(e,t)))),i.code.add((0,z.H)(p||(p=(0,m.A)(["{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}"]))))),e.lineVerticalPlaneEnabled&&(i.uniforms.add(new A.G("angleCutoff",(e=>H(e))),new R.E("lineVerticalPlane",((e,t)=>function(e,t){const i=(0,V.sd)(e.lineVerticalPlaneSegment,.5,B),n=e.renderCoordsHelper.worldUpAtPosition(i,G),r=(0,x.n)(j,e.lineVerticalPlaneSegment.vector),s=(0,x.b)(B,n,r);return(0,x.n)(s,s),W(e.lineVerticalPlaneSegment.origin,s,t.camera.viewMatrix)}(e,t))),new M.t("lineVerticalStart",((e,t)=>function(e,t){const i=(0,x.c)(B,e.lineVerticalPlaneSegment.origin);return e.renderCoordsHelper.setAltitude(i,0),(0,x.e)(i,i,t.camera.viewMatrix)}(e,t))),new M.t("lineVerticalEnd",((e,t)=>function(e,t){const i=(0,x.g)(B,e.lineVerticalPlaneSegment.origin,e.lineVerticalPlaneSegment.vector);return e.renderCoordsHelper.setAltitude(i,0),(0,x.e)(i,i,t.camera.viewMatrix)}(e,t)))),i.code.add((0,z.H)(_||(_=(0,m.A)(["{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}"]))))),e.intersectsLineEnabled&&(i.uniforms.add(new A.G("angleCutoff",(e=>H(e))),new M.t("intersectsLineStart",((e,t)=>(0,x.e)(B,e.lineStartWorld,t.camera.viewMatrix))),new M.t("intersectsLineEnd",((e,t)=>(0,x.e)(B,e.lineEndWorld,t.camera.viewMatrix))),new M.t("intersectsLineDirection",((e,t)=>((0,x.c)(U,e.intersectsLineSegment.vector),U[3]=0,(0,x.n)(B,(0,E.t)(U,U,t.camera.viewMatrix))))),new T.m("intersectsLineRadius",(e=>e.intersectsLineRadius))),i.code.add((0,z.H)(g||(g=(0,m.A)(["{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}"]))))),i.code.add((0,z.H)(f||(f=(0,m.A)(["fragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}"])))),t}function H(e){return(0,P.hZ)(N,Math.cos(e.angleCutoff),Math.cos(Math.max(0,e.angleCutoff-(0,v.kU)(2))))}function W(e,t,i){return(0,x.e)(F,e,i),(0,x.c)(U,t),U[3]=0,(0,E.t)(U,U,i),(0,y.O_)(F,U,k)}const N=(0,b.vt)(),B=(0,w.vt)(),U=(0,D.vt)(),G=(0,w.vt)(),j=(0,w.vt)(),F=(0,w.vt)(),k=(0,y.vt)(),Z=(0,L.c)(),X=Object.freeze(Object.defineProperty({__proto__:null,build:q,defaultAngleCutoff:I},Symbol.toStringTag,{value:"Module"}))},99469:(e,t,i)=>{i.d(t,{o:()=>X});var n=i(20664),r=i(9392),s=i(44230),a=i(69230),l=i(89379),o=i(35143),h=i(30726),c=i(46053),d=(i(81806),i(76460),i(47249),i(85842)),u=i(49595),p=i(4763),_=i(95925),g=i(64465),f=i(44815),m=i(57481),v=i(48549),P=i(69008),b=i(66470),x=i(16506),w=i(42693),E=i(28584),D=i(96111),V=i(93345),y=i(57162);class L extends w.w{initializeProgram(e){return new E.B(e.rctx,L.shader.get().build(this.configuration),S)}initializePipeline(){return(0,y.Ey)({blending:(0,y.ox)(V.dn.ONE,V.dn.ONE_MINUS_SRC_ALPHA),colorWrite:y.wE})}}L.shader=new x.$(D.L,(()=>i.e(7657).then(i.bind(i,37657))));const S=new Map([[b.r.START,0],[b.r.END,1],[b.r.UP,2],[b.r.EXTRUDE,3]]);var C=i(76718);class A{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=(0,r.vt)(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=(0,f.jh)(3*e.length);let i=0;for(const n of e)t[i++]=n[0],t[i++]=n[1],t[i++]=n[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const e=this._buffers[0],t=3*Math.floor(e.length/3/2);(0,n.s)(this._origin,e[t],e[t+1],e[t+2])}else(0,n.s)(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const t=this._ensureVAO(e);null!=t&&(e.bindVAO(t),e.drawArrays(V.WR.TRIANGLES,0,this._count))}dispose(){null!=this._vao&&this._vao.dispose()}_ensureVAO(e){return null==this._buffers?null:(null==this._vao&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,t){const i=this._createDataBuffer(t);return this._dirty=!1,new P.Z(e,S,{data:(0,m.U)(T)},{data:C.g.createVertex(e,V._U.STATIC_DRAW,i)})}_ensureVertexData(e,t){var i;if(!this._dirty)return;const n=this._createDataBuffer(t);null!==(i=e.vertexBuffers.data)&&void 0!==i&&i.setData(n),this._dirty=!1}_numberOfRenderVertices(e){return 2*(e.length/3-1)*3}_createDataBuffer(e){const t=e.reduce(((e,t)=>e+this._numberOfRenderVertices(t)),0);this._count=t;const i=T.createBuffer(t),r=this._origin;let s=0,a=0;for(const l of e){for(let e=0;e<l.length;e+=3){const t=(0,n.s)(R,l[e],l[e+1],l[e+2]);0===e?a=this._renderCoordsHelper.getAltitude(t):this._renderCoordsHelper.setAltitude(t,a);const o=this._renderCoordsHelper.worldUpAtPosition(t,M),h=s+2*e,c=(0,n.f)(R,t,r);if(e<l.length-3){i.up.setVec(h,o),i.up.setVec(h+3,o),i.up.setVec(h+5,o);for(let e=0;e<6;e++)i.start.setVec(h+e,c);i.extrude.setValues(h,0,-1),i.extrude.setValues(h+1,1,-1),i.extrude.setValues(h+2,1,1),i.extrude.setValues(h+3,0,-1),i.extrude.setValues(h+4,1,1),i.extrude.setValues(h+5,0,1)}if(e>0){i.up.setVec(h-2,o),i.up.setVec(h-4,o),i.up.setVec(h-5,o);for(let e=-6;e<0;e++)i.end.setVec(h+e,c)}}s+=this._numberOfRenderVertices(l)}return i.buffer}}const M=(0,r.vt)(),R=(0,r.vt)(),T=(0,v.BP)().vec3f(b.r.START).vec3f(b.r.END).vec3f(b.r.UP).vec2f(b.r.EXTRUDE);var z=i(60586),O=i(77730),I=i(99362),q=i(99415);class H extends q.K{constructor(){super(...arguments),this.contrastControlEnabled=!1}}(0,o._)([(0,q.W)()],H.prototype,"contrastControlEnabled",void 0);var W=i(15941),N=i(64839),B=i(32119),U=i(71467);class G extends N.Y{constructor(){super(...arguments),this.innerColor=(0,r.fA)(1,1,1),this.innerWidth=1,this.glowColor=(0,r.fA)(1,.5,0),this.glowWidth=8,this.glowFalloff=8,this.globalAlpha=.75,this.globalAlphaContrastBoost=2,this.angleCutoff=(0,W.kU)(6),this.pointDistanceOrigin=(0,r.vt)(),this.pointDistanceTarget=(0,r.vt)(),this.lineVerticalPlaneSegment=(0,s.vt)(),this.intersectsLineSegment=(0,s.vt)(),this.intersectsLineRadius=3,this.heightManifoldTarget=(0,r.vt)(),this.lineStartWorld=(0,r.vt)(),this.lineEndWorld=(0,r.vt)()}}class j extends w.w{initializeProgram(e){return new E.B(e.rctx,j.shader.get().build(this.configuration),B.D)}initializePipeline(){return(0,y.Ey)({blending:(0,y.ox)(V.dn.ONE,V.dn.ONE_MINUS_SRC_ALPHA),colorWrite:y.wE})}}j.shader=new x.$(U.L,(()=>i.e(1877).then(i.bind(i,51877))));class F extends H{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1,this.spherical=!1}}(0,o._)([(0,q.W)()],F.prototype,"heightManifoldEnabled",void 0),(0,o._)([(0,q.W)()],F.prototype,"pointDistanceEnabled",void 0),(0,o._)([(0,q.W)()],F.prototype,"lineVerticalPlaneEnabled",void 0),(0,o._)([(0,q.W)()],F.prototype,"intersectsLineEnabled",void 0),(0,o._)([(0,q.W)()],F.prototype,"spherical",void 0);let k=class extends z.Ot{constructor(e){super(e),this._technique=null,this._heightManifoldEnabled=!1,this._pointDistanceEnabled=!1,this._lineVerticalPlaneEnabled=!1,this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._viewingMode=g.RT.Local,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this._passParameters=new G,this.produces=new Map([[O.N.LASERLINES,()=>!this.contrastControlEnabled],[O.N.LASERLINES_CONTRAST_CONTROL,()=>this.contrastControlEnabled]])}initialize(){this._passParameters.renderCoordsHelper=this.renderCoordsHelper}consumes(){return z.B7}get isDecoration(){return this._isDecoration}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._passParameters.heightManifoldTarget}set heightManifoldTarget(e){(0,n.c)(this._passParameters.heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._passParameters.pointDistanceTarget}set pointDistanceTarget(e){(0,n.c)(this._passParameters.pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._passParameters.pointDistanceOrigin}set pointDistanceOrigin(e){(0,n.c)(this._passParameters.pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._passParameters.lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){(0,s.C)(e,this._passParameters.lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._passParameters.intersectsLineSegment}set intersectsLineSegment(e){(0,s.C)(e,this._passParameters.intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._passParameters.intersectsLineRadius}set intersectsLineRadius(e){e!==this._passParameters.intersectsLineRadius&&(this._passParameters.intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get viewingMode(){return this._viewingMode}set viewingMode(e){e!==this._viewingMode&&(this._viewingMode=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(e){e!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=e,null!=this._pathVerticalPlaneData&&this._requestRender())}set pathVerticalPlaneVertices(e){null==this._pathVerticalPlaneData&&(this._pathVerticalPlaneData=new A(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){null==this._pathVerticalPlaneData&&(this._pathVerticalPlaneData=new A(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameters(e){(0,I.MB)(this._passParameters,e)&&this._requestRender()}initializeRenderContext(e){this._context=e,this._techniqueRepository=e.techniqueRepository,this._techniqueConfig=new F;const t=new H;t.contrastControlEnabled=this.contrastControlEnabled,this._pathTechnique=this._techniqueRepository.acquire(L,t)}uninitializeRenderContext(){this._technique=(0,h.Gz)(this._technique),this._pathVerticalPlaneData=(0,h.WD)(this._pathVerticalPlaneData),this._pathTechnique=(0,h.Gz)(this._pathTechnique)}prepareTechnique(){return this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled?(this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this.contrastControlEnabled,this._techniqueConfig.spherical=this._viewingMode===g.RT.Global,this._technique=this._techniqueRepository.releaseAndAcquire(j,this._techniqueConfig,this._technique),this._technique):this._pathTechnique}renderNode(e,t){(this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled)&&this._renderUnified(e,t),this.pathVerticalPlaneEnabled&&this._renderPath(e)}_renderUnified(e,t){const i=e.rctx;this._updatePassParameters(e),i.bindTechnique(t,e.bindParameters,this._passParameters),i.screen.draw()}_renderPath(e){if(null==this._pathVerticalPlaneData||null==this._pathTechnique)return;const t=e.rctx,i=this._pathTechnique;t.bindTechnique(i,e.bindParameters,(0,l.A)((0,l.A)({},this._passParameters),{},{origin:this._pathVerticalPlaneData.origin})),this._pathVerticalPlaneData.draw(e.rctx)}_updatePassParameters(e){if(!this._intersectsLineEnabled)return;const t=e.bindParameters.camera;if(this._intersectsLineInfinite){if((0,u.$e)((0,_.LV)(this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector),Z),Z.c0=-Number.MAX_VALUE,!(0,p.ig)(t.frustum,Z))return;(0,u.j1)(Z,this._passParameters.lineStartWorld),(0,u.mO)(Z,this._passParameters.lineEndWorld)}else(0,n.c)(this._passParameters.lineStartWorld,this._passParameters.intersectsLineSegment.origin),(0,n.g)(this._passParameters.lineEndWorld,this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector)}_requestRender(){this._context&&this._context.requestRender()}get test(){return{passParameters:this._passParameters}}};(0,o._)([(0,c.MZ)({constructOnly:!0})],k.prototype,"contrastControlEnabled",void 0),(0,o._)([(0,c.MZ)({constructOnly:!0})],k.prototype,"_isDecoration",void 0),(0,o._)([(0,c.MZ)({constructOnly:!0})],k.prototype,"renderCoordsHelper",void 0),k=(0,o._)([(0,d.$)("esri.views.3d.support.LaserLineRenderer")],k);const Z=(0,u.vt)();class X extends a.B{constructor(e){super(e),this._angleCutoff=U.d,this._style={},this._heightManifoldTarget=(0,r.vt)(),this._heightManifoldEnabled=!1,this._intersectsLine=(0,s.vt)(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProperties(e)}get testData(){return this._renderer}createResources(){this._ensureRenderer()}destroyResources(){this._disposeRenderer()}updateVisibility(){this._syncRenderer(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this._syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this._syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(e){null!=e?((0,n.c)(this._heightManifoldTarget,e),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this._syncRenderer(),this._syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(null==e)return void(this.intersectsLine=null);const t=this.view.renderCoordsHelper.worldUpAtPosition(e,K);this.intersectsLine=(0,s.fA)(e,t),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(e){null!=e?((0,s.C)(e,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this._syncIntersectsLine(),this._syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this._syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){this._lineVerticalPlaneSegment=null!=e?(0,s.C)(e):null,this._syncLineVerticalPlane(),this._syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(e){this._pointDistanceLine=null!=e?{origin:(0,r.o8)(e.origin),target:e.target?(0,r.o8)(e.target):null}:null,this._syncPointDistance(),this._syncRenderer()}_syncRenderer(){this.attached&&this.visible&&(this._intersectsLineEnabled||this._heightManifoldEnabled||null!=this._pointDistanceLine||null!=this._pathVerticalPlaneBuffers)?this._ensureRenderer():this._disposeRenderer()}_ensureRenderer(){null==this._renderer&&(this._renderer=new k({renderCoordsHelper:this.view.renderCoordsHelper,contrastControlEnabled:!0,_isDecoration:this.isDecoration}),this._renderer.viewingMode=this.view.state.viewingMode,this._syncStyle(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncIntersectsLineInfinite(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this._renderer))}_syncStyle(){null!=this._renderer&&(this._renderer.setParameters(this._style),null!=this._style.intersectsLineRadius&&(this._renderer.intersectsLineRadius=this._style.intersectsLineRadius))}_syncAngleCutoff(){null!=this._renderer&&this._renderer.setParameters({angleCutoff:this._angleCutoff})}_syncHeightManifold(){null!=this._renderer&&(this._renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this._renderer.heightManifoldTarget=this._heightManifoldTarget))}_syncIntersectsLine(){null!=this._renderer&&(this._renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this._renderer.intersectsLineSegment=this._intersectsLine))}_syncIntersectsLineInfinite(){null!=this._renderer&&(this._renderer.intersectsLineInfinite=this._intersectsLineInfinite)}_syncPathVerticalPlane(){null!=this._renderer&&(this._renderer.pathVerticalPlaneEnabled=null!=this._pathVerticalPlaneBuffers&&this.visible,null!=this._pathVerticalPlaneBuffers&&(this._renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}_syncLineVerticalPlane(){null!=this._renderer&&(this._renderer.lineVerticalPlaneEnabled=null!=this._lineVerticalPlaneSegment&&this.visible,null!=this._lineVerticalPlaneSegment&&(this._renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}_syncPointDistance(){if(null==this._renderer)return;const e=this._pointDistanceLine,t=null!=e;this._renderer.pointDistanceEnabled=t&&null!=e.target&&this.visible,t&&(this._renderer.pointDistanceOrigin=e.origin,null!=e.target&&(this._renderer.pointDistanceTarget=e.target))}_disposeRenderer(){null!=this._renderer&&this.view._stage&&(this.view._stage.removeRenderPlugin(this._renderer),this._renderer=null)}}const K=(0,r.vt)()},83574:(e,t,i)=>{i.d(t,{l:()=>v});var n=i(15941),r=i(20664),s=i(9392),a=i(43047),l=i(55855),o=i(14487),h=i(42294),c=i(75762),d=i(32314),u=i(67425),p=i(49296),_=i(72900),g=i(62577),f=i(66470),m=i(84248);class v extends d.X{constructor(e){super(e),this._material=null,this._texture=null,this._geometry=null,this._size=3,this._color=(0,l.fA)(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=(0,l.fA)(1,1,1,1),this._elevationInfo=null,this.applyProperties(e)}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this._preferredTextureSize;this._size=e,t<this._preferredTextureSize?this.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){(0,a.a)(e,this._color)||((0,a.c)(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,this.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){(0,a.a)(e,this._outlineColor)||((0,a.c)(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.recreateGeometry()}_updateMaterial(){this._material&&this._material.setParameters(this._materialParameters)}_updateSizeAttribute(){const e=this.object;if(null==e)return;const t=e.geometries[0];if(null==t)return;const i=t.getMutableAttribute(f.r.SIZE).data,n=this._geometrySize;i[0]=n,i[1]=n,e.geometryVertexAttributeUpdated(e.geometries[0],f.r.SIZE)}get _materialParameters(){var e;return{color:this._color,textureIsSignedDistanceField:!0,sampleSignedDistanceFieldTexelCenter:(0,_.ny)(this._primitive),distanceFieldBoundingBox:b,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:null===(e=this._texture)||void 0===e?void 0:e.id,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled,isDecoration:this.isDecoration}}get _geometrySize(){return this._size/P}createExternalResources(){this._texture=(0,_.sZ)(this._primitive,this._preferredTextureSize),this._material=new m.R(this._materialParameters);const e=this.view._stage;this._texture.load(e.renderView.renderingContext),e.add(this._texture)}destroyExternalResources(){this._texture&&(this.view._stage.remove(this._texture),this._texture.dispose(),this._texture=null),this._material=null}createGeometries(e){const t=this._createRenderGeometry();null!=t&&e.addGeometry(t)}forEachExternalMaterial(e){this._material&&e(this._material)}get _preferredTextureSize(){return(0,n.qE)(2*this._geometrySize,16,128)}calculateMapBounds(e){var t;const i=null===(t=this.object)||void 0===t?void 0:t.geometries[0];if(!i)return!1;const n=i.attributes.get(f.r.POSITION).data;return(0,o.F)(n,this.view.renderCoordsHelper.spatialReference,x,this.view.spatialReference),(0,h.Hq)(e,x),!0}_createRenderGeometry(){const{geometry:e,_material:t}=this;if(null==e||null==t)return null;const{renderCoordsHelper:i,elevationProvider:n}=this.view,s=(0,u.nG)(e,n,p.F.fromElevationInfo(this.elevationInfo),i),a=(0,r.s)(c.rq.get(),e.x,e.y,s),l=c.rq.get();(0,o.F)(a,e.spatialReference,l,i.spatialReference);const h=this._geometrySize;return(0,g.DJ)(t,null,l,null,[h,h],[0,0,0,1])}}const P=_.CN,b=[P/2,P/2,1-P/2,1-P/2],x=(0,s.vt)()},31484:(e,t,i)=>{i.d(t,{K:()=>m});var n,r,s,a,l,o,h=i(57528),c=i(65058),d=i(27963),u=i(95756),p=i(5517),_=i(21390),g=i(64839),f=i(70367);function m(e,t){const i=e.fragment;i.include(c.D),e.include(d.Ir),i.uniforms.add(new _.m("globalAlpha",(e=>e.globalAlpha)),new p.t("glowColor",(e=>e.glowColor)),new _.m("glowWidth",((e,t)=>e.glowWidth*t.camera.pixelRatio)),new _.m("glowFalloff",(e=>e.glowFalloff)),new p.t("innerColor",(e=>e.innerColor)),new _.m("innerWidth",((e,t)=>e.innerWidth*t.camera.pixelRatio)),new f.N("depthMap",((e,t)=>{var i;return null===(i=t.linearDepth)||void 0===i?void 0:i.getTexture()})),new u.G("nearFar",((e,t)=>t.camera.nearFar)),new f.N("frameColor",((e,t)=>t.mainColor))),i.code.add((0,g.H)(n||(n=(0,h.A)(["vec4 blendPremultiplied(vec4 source, vec4 dest) {\nfloat oneMinusSourceAlpha = 1.0 - source.a;\nreturn vec4(\nsource.rgb + dest.rgb * oneMinusSourceAlpha,\nsource.a + dest.a * oneMinusSourceAlpha\n);\n}"])))),i.code.add((0,g.H)(r||(r=(0,h.A)(["vec4 premultipliedColor(vec3 rgb, float alpha) {\nreturn vec4(rgb * alpha, alpha);\n}"])))),i.code.add((0,g.H)(s||(s=(0,h.A)(["vec4 laserlineProfile(float dist) {\nif (dist > glowWidth) {\nreturn vec4(0.0);\n}\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\nreturn blendPremultiplied(\npremultipliedColor(innerColor, innerAlpha),\npremultipliedColor(glowColor, glowAlpha)\n);\n}"])))),i.code.add((0,g.H)(a||(a=(0,h.A)(["bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {\nfloat depth = linearDepthFromTexture(depthMap, uv, nearFar);\nif (-depth == nearFar[0]) {\nreturn false;\n}\npos = reconstructPosition(gl_FragCoord.xy, depth);\nnormal = normalize(cross(dFdx(pos), dFdy(pos)));\nfloat ddepth = fwidth(depth);\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);\nreturn true;\n}"])))),t.contrastControlEnabled?(i.uniforms.add(new _.m("globalAlphaContrastBoost",(e=>null!=e.globalAlphaContrastBoost?e.globalAlphaContrastBoost:1))),i.code.add((0,g.H)(l||(l=(0,h.A)(["float rgbToLuminance(vec3 color) {\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\n}\nvec4 laserlineOutput(vec4 color) {\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\nreturn color * alpha;\n}"]))))):i.code.add((0,g.H)(o||(o=(0,h.A)(["vec4 laserlineOutput(vec4 color) {\nreturn color * globalAlpha;\n}"]))))}}}]);
//# sourceMappingURL=7818.3846aadd.chunk.js.map